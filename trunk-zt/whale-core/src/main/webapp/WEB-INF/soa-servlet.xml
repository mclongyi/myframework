<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:occ-client="http://www.odianyun.com/schema/occ-client"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
		http://www.springframework.org/schema/mvc  
		http://www.springframework.org/schema/mvc/spring-mvc.xsd  
		http://www.springframework.org/schema/context  
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.odianyun.com/schema/occ-client
		http://www.odianyun.com/schema/occ-client.xsd">

	<context:component-scan base-package="com.odianyun.search.whale" />
	<context:annotation-config />

    <!--
    <bean id="soaPropertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>file:${global.config.path}/search/common/search_soa.properties</value>
			</list>
		</property>
	</bean>
	-->

    <bean id="configProperties_whale-core-soa-servlet" class="com.odianyun.cc.client.spring.OccPropertyPlaceholderConfigurer">
        <property name="pool" value="search"></property>
       <property name="globalPropFiles">
            <set>
                <value>search/common/search_soa.properties</value>
            </set>
        </property>
    </bean>

     <!--一个应用只需要配置一个providerConfig-->
    <bean name="providerConfig" class="com.odianyun.soa.provider.ProviderConfig">
        <property name="domainName" value="${soa.domainName}"></property>
        <!--应用Context Path -->
        <property name="serviceName" value="${soa.serviceAppName}"></property>
        <property name="assembleAppName" value="true"></property>
        <!-- 与web.xml中servlet-mapping中的url-pattern的值相同 -->
        <property name="urlPattern" value="${soa.urlPattern}"></property>
        <!-- 根据Application server 的端口修改 -->
        <property name="port" value="${soa.port}"></property>
    </bean>
    
    <bean name="/SOASearchService" class="com.odianyun.soa.provider.SoaWebserviceExporter">
        <property name="providerConfig" ref="providerConfig"></property>
        <property name="service" ref="searchService"/>
        <property name="serviceInterface" value="com.odianyun.search.whale.api.service.SearchService"/>
        <!-- serive版本号 开发环境后缀=dev; staging环境后缀=stg; 测试环境=test，线上环境无后缀 -->
        <property name="serviceVersion" value="${soa.serviceVersion}"></property>
    </bean>
    
    <bean name="/SOASearchCacheService" class="com.odianyun.soa.provider.SoaWebserviceExporter">
        <property name="providerConfig" ref="providerConfig"></property>
        <property name="service" ref="searchCacheService"/>
        <property name="serviceInterface" value="com.odianyun.search.whale.api.service.CacheService"/>
        <!-- serive版本号 开发环境后缀=dev; staging环境后缀=stg; 测试环境=test，线上环境无后缀 -->
        <property name="serviceVersion" value="${soa.serviceVersion}"></property>
    </bean>
    
    <bean name="/SOAGeoSearchService" class="com.odianyun.soa.provider.SoaWebserviceExporter">
        <property name="providerConfig" ref="providerConfig"></property>
        <property name="service" ref="geoSearchService"/>
        <property name="serviceInterface" value="com.odianyun.search.whale.api.model.geo.GeoSearchService"/>
        <!-- serive版本号 开发环境后缀=dev; staging环境后缀=stg; 测试环境=test，线上环境无后缀 -->
        <property name="serviceVersion" value="${soa.serviceVersion}"></property>
    </bean>
    
    
    <bean name="/SOAO2oShopSearchService" class="com.odianyun.soa.provider.SoaWebserviceExporter">
        <property name="providerConfig" ref="providerConfig"></property>
        <property name="service" ref="o2OShopSearchService"/>
        <property name="serviceInterface" value="com.odianyun.search.whale.api.model.o2o.O2OShopSearchService"/>
        <!-- serive版本号 开发环境后缀=dev; staging环境后缀=stg; 测试环境=test，线上环境无后缀 -->
        <property name="serviceVersion" value="${soa.serviceVersion}"></property>
    </bean>
    
    
    <bean name="/SOASelectionProductSearchService" class="com.odianyun.soa.provider.SoaWebserviceExporter">
        <property name="providerConfig" ref="providerConfig"></property>
        <property name="service" ref="selectionProductSearchService"/>
        <property name="serviceInterface" value="com.odianyun.search.whale.api.model.selectionproduct.SelectionProductSearchService"/>
        <!-- serive版本号 开发环境后缀=dev; staging环境后缀=stg; 测试环境=test，线上环境无后缀 -->
        <property name="serviceVersion" value="${soa.serviceVersion}"></property>
    </bean>
    
    <bean name="/SOASuggestService" class="com.odianyun.soa.provider.SoaWebserviceExporter">
        <property name="providerConfig" ref="providerConfig"></property>
        <property name="service" ref="suggestServer"/>
        <property name="serviceInterface" value="com.odianyun.search.whale.api.service.SuggestService"/>
        <!-- serive版本号 开发环境后缀=dev; staging环境后缀=stg; 测试环境=test，线上环境无后缀 -->
        <property name="serviceVersion" value="${soa.serviceVersion}"></property>
    </bean>
    
    <bean name="/SOAHistoryService" class="com.odianyun.soa.provider.SoaWebserviceExporter">
        <property name="providerConfig" ref="providerConfig"></property>
        <property name="service" ref="historyServer"/>
        <property name="serviceInterface" value="com.odianyun.search.whale.api.service.HistoryService"/>
        <!-- serive版本号 开发环境后缀=dev; staging环境后缀=stg; 测试环境=test，线上环境无后缀 -->
        <property name="serviceVersion" value="${soa.serviceVersion}"></property>
    </bean>

    <bean name="/SOAShopService" class="com.odianyun.soa.provider.SoaWebserviceExporter">
        <property name="providerConfig" ref="providerConfig"></property>
        <property name="service" ref="shopServer"/>
        <property name="serviceInterface" value="com.odianyun.search.whale.api.service.ShopService"/>
        <!-- serive版本号 开发环境后缀=dev; staging环境后缀=stg; 测试环境=test，线上环境无后缀 -->
        <property name="serviceVersion" value="${soa.serviceVersion}"></property>
    </bean>

    <bean name="/SOASearchBusinessService" class="com.odianyun.soa.provider.SoaWebserviceExporter">
        <property name="providerConfig" ref="providerConfig"></property>
        <property name="service" ref="searchBusinessService"/>
        <property name="serviceInterface" value="com.odianyun.search.whale.api.service.SearchBusinessService"/>
        <!-- serive版本号 开发环境后缀=dev; staging环境后缀=stg; 测试环境=test，线上环境无后缀 -->
        <property name="serviceVersion" value="${soa.serviceVersion}"></property>
    </bean>

    <bean name="/SOARecommendService" class="com.odianyun.soa.provider.SoaWebserviceExporter">
        <property name="providerConfig" ref="providerConfig"></property>
        <property name="service" ref="recommendServer"/>
        <property name="serviceInterface" value="com.odianyun.search.whale.api.recommend.RecommendService"/>
        <!-- serive版本号 开发环境后缀=dev; staging环境后缀=stg; 测试环境=test，线上环境无后缀 -->
        <property name="serviceVersion" value="${soa.serviceVersion}"></property>
    </bean>

</beans>